	Вектор в C++ — это замена стандартному динамическому массиву, память для которого выделяется вручную, с помощью оператора new.
int main()
{  
    std::vector<int> v1(10); 	// Вектор из 10 элементов типа int
    std::vector<float> v2;	// Вектор из элементов типа float, С неопределенным размером
    std::vector<int> v3(10, 0); // Вектор, состоящий из 10 элементов типа int, По умолчанию все элементы заполняются нулями
return 0;
}

	Методы класса vector
Для добавления нового элемента в конец вектора используется метод push_back(). Количество элементов определяется методом size(). 
Для доступа к элементам вектора можно использовать квадратные скобки [], также, как и для обычных массивов.

size() — количество элементов в векторе
push_back() — добавить в конец элемент

pop_back() — удалить последний элемент
clear() — удалить все элементы вектора
empty() — проверить вектор на пустоту

#include <iostream>
#include <vector>
#include <string>
using namespace std;
int main(){
    setlocale(LC_ALL, "");
    vector<string> students;			// Создание вектора из строк

    
    string buf = "";				// Буфер для ввода фамилии студента

    cout << "Вводите фамилии студентов. "
              << "По окончание ввода введите пустую строку" <<endl;

    do {
        getline(cin, buf);
        if (buffer.size() > 0) {
            students.push_back(buffer);		// Добавление элемента в конец вектора
        }
    } while (buffer != "");

    unsigned int vector_size = students.size(); // Сохраняем количество элементов вектора 

    // Вывод заполненного вектора на экран
    cout << "Ваш вектор." << endl;
    for (int i = 0; i < vector_size; i++) {
        cout << students[i] << endl;            // Вывод заполненного вектора на экран
    }

    return 0;
}
