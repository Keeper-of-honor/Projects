Двадцать второе(22). Вопросы
1) Python. Множества
Множество — это структура данных, эквивалентная множествам в математике. Множество может состоять из различных элементов, порядок элементов в множестве не определен. В множество можно добавлять и удалять элементы, можно перебирать элементы множества, можно выполнять операции над множествами. Можно проверять принадлежность элемента множеству.
В отличие от массивов, где элементы хранятся в виде последовательного списка, в множествах порядок хранения элементов не определен. Это позволяет выполнять операции быстрее, чем просто перебирая все элементы множества.
Исключением является пустое множество, которое можно создать при помощи функции set(). Если функции set передать в качестве параметра список, строку или кортеж, то она вернёт множество, составленное из элементов списка, строки, кортежа.
A = {3, 2, 1}
A = set('qwerty')
print(A)
	 Вывод: {'e', 'q', 'r', 't', 'w', 'y'}

A = {1, 2, 3}
B = {3, 2, 3, 1}
print(A == B)
Вывод: True
Проверить, принадлежит ли элемент множеству можно при помощи операции in, возвращающей значение типа bool. Аналогично есть противоположная операция not in. Для добавления элемента в множество есть метод add:
A = {1, 2, 3}
print(1 in A, 4 not in A)
A.add(4)
Вывод: True True
Для удаления элемента x из множества есть два метода: discard и remove. Их поведение различается только в случае, когда удаляемый элемент отсутствует в множестве. В этом случае метод discard не делает ничего, а метод remove генерирует исключение KeyError.
Метод pop удаляет из множества один случайный элемент и возвращает его значение. Если же множество пусто, то генерируется исключение KeyError.
Из множества можно сделать список при помощи функции list.

Операции с множествами:

С множествами в питоне можно выполнять обычные для математики операции над множествами.
A | B
A.union(B)

Возвращает множество, являющееся объединением множеств A и B.
A |= B
A.update(B)

Добавляет в множество A все элементы из множества B.
A & B
A.intersection(B)

Возвращает множество, являющееся пересечением множеств A и B.
A &= B
A.intersection_update(B)

Оставляет в множестве A только те элементы, которые есть в множестве B.
A - B
A.difference(B)

Возвращает разность множеств A и B(элементы, входящие в A, но не входящие в B).
A -= B
A.difference_update(B)

Удаляет из множества A все элементы, входящие в B.
A ^ B
A.symmetric_difference(B)

Возвращает симметрическую разность множеств A и B (элементы, входящие в A или в B, но не в оба из них одновременно).
A ^= B
A.symmetric_difference_update(B)

Записывает в A симметрическую разность множеств A и B.
A <= B
A.issubset(B)

Возвращает true, если A является подмножеством B.
A >= B
A.issuperset(B)

Возвращает true, если B является подмножеством A.

Эквивалентно A <= B and A != B
A < B

Эквивалентно A >= B and A != B
A > B




