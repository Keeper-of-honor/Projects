На подготовку - 1.30, на сдачу 10 минут
Задание 1.
Реализовать очередь на массиве. Разработать функцию поиска максимального элемента. Оценить сложность выполнения в лучшем и худшем случаях
Реализовать очередь на указателях. Разработать функцию поиска элемента по номеру. Оценить сложность выполнения в лучшем и худшем случаях
Реализовать сортировки: вставками и выбором. Сравнить сложность выполнения в лучшем, худшем и среднем случаях
Реализовать сортировки: обменную и выбором. Сравнить сложность выполнения в лучшем, худшем и среднем случаях
Реализовать сортировки: обменную и вставками. Сравнить сложность выполнения в лучшем, худшем и среднем случаях
Реализовать очередь с приоритетами на массиве. Оценить сложность выполнения операции вставки элемента в лучшем и худшем случаях
Реализовать стек на указателях. Разработать функцию поиска максимального элемента. Оценить сложность выполнения в лучшем и худшем случаях
Реализовать функции сортировки слиянием и сортировки выбором. Сравнить сложность выполнения в лучшем, худшем и среднем случаях
Реализовать функции сортировки слиянием и сортировки вставками. Сравнить сложность выполнения в лучшем, худшем и среднем случаях
Реализовать функции qsort и сортировки выбором. Сравнить сложность выполнения в лучшем, худшем и среднем случаях
Реализовать функции qsort и сортировки обменом. Сравнить сложность выполнения в лучшем, худшем и среднем случаяхДан упорядоченный файл целых чисел. Реализовать функцию поиска минимального элемента. Оценить сложность выполнения операции присвоения в лучшем, худшем и среднем случаях
Реализовать функции qsort и сортировки вставками. Сравнить сложность выполнения в лучшем, худшем и среднем случаяхДан неупорядоченный файл целых чисел. Реализовать функцию поиска максимального элемента. Оценить число операций присвоения в лучшем, худшем и среднем случаях
Реализовать АТД «Длинное число». Реализовать операции сложения и сравнения. Оценить сложность выполнения операции сравнения в лучшем и худшем случаях
Дана строка символов, разделенных одним или несколькими пробелами. Заменить все вхождения слова S1 словом S2. Оценить число операций присвоения в худшем, лучшем и среднем случаях
Дана строка символов, разделенных одним или несколькими пробелами. Разработать процедуру замены нескольких подряд идущих пробелов одним пробелом. Оценить число замен в лучшем, худшем и среднем случаях
Дан массив строк, упорядоченный лексикографически. Разработать функцию двоичного поиска заданной строки. Оценить сложность выполнения в лучшем, худшем и среднем случаях
Найти максимальное значение массива. Рекурсия. Оценить сложность выполнения в лучшем, худшем и среднем случаях
По данным двум числам 1≤a,b≤2*10**9 найти наименьшее натуральное число m, которое делится и на a, и на b. Оценить сложность выполнения в худшем и лучшем случаях
Реализовать кольцевой список. Разработать функцию поиска максимального элемента. Оценить сложность выполнения в лучшем и худшем случаях

Задание 2.
Дано целое число 1≤n≤40, необходимо вычислить n-е число Фибоначчи (F0=0, F1=1 и Fn=Fn−1+Fn−2 при n≥2).
Дано число 1≤n≤10**7, необходимо найти последнюю цифру n-го числа Фибоначчи.
Скорости роста. Сравнить, используя Ω, Θ, Ο. Доказать
Дана временная функция сложности рекурсивного алгоритма. Выразить T(n) через n. T(1)=3; T(n)=T(n-1)+n-1
Дана временная функция сложности рекурсивного алгоритма. Выразить T(n) через n. T(1)=8; T(n)=3*T(n-1)-15
Дан исходный текст программы. Провести оптимизацию программы по быстродействию. Построить блок-схему программы.
По данным двум числам 1≤a,b≤2*10**9 найдите их наибольший общий делитель
